library(dlm)
library(PNADcIBGE)
library(tidyverse)
arquivos <- list.files("data/estimativas", pattern = "\\.RDS$", full.names = TRUE)
pnadcrds <- lapply(arquivos, readRDS)
dadosestr <- function(pnadcrds){
indices<-list(mg=11,bh=1,entorno=2,colar=3,RIDE=4,sul=5,trng=6,mata=7,norte=8,riodoce=9,central=10)
lapply(indices, function(linha) {
df_result<-do.call(rbind, lapply(pnadcrds[c(1,14,27,40,
2,15,28,41,
3,16,29,42,
4,17,30,43,
5,18,31,44,
6,19,32,45,
7,20,33,46,
8,21,34,47,
9,22,35,48,
10,23,36,49,
11,24,37,50,
12,25,38,51,
13,26,39)], function(df) {
data.frame(
"Período" = as.character(df[linha, 8]),
"Total de ocupados" = as.numeric(df[linha, 2]),
"sd_o" = as.numeric(df[linha, 3]),
"Total de desocupados" = as.numeric(df[linha, 4]),
"sd_d" = as.numeric(df[linha, 5]),
"Taxa de desocupação" = as.numeric(df[linha, 6]),
"sd_txd" = as.numeric(df[linha, 7])
)
}))
df_result <- cbind(
df_result[, 1:3], `CV.ocupados` = with(df_result, `sd_o` / `Total.de.ocupados` * 100),
df_result[, 4:5], `CV.desocupados` = with(df_result, `sd_d` / `Total.de.desocupados` * 100),
df_result[, 6:7], `CV.taxa` = with(df_result, `sd_txd` / `Taxa.de.desocupação` * 100)
)
return(df_result)
})
}
View(pnadcrds)
resultados<-dadosestr(pnadcrds)
View(resultados)
arquivos <- list.files("data/estimativas", pattern = "\\.RDS$", full.names = TRUE)
pnadcrds <- lapply(arquivos, readRDS)
arquivos <- list.files("D:/FJP2425/Programacao/data/estimativas", pattern = "\\.RDS$", full.names = TRUE)
pnadcrds <- lapply(arquivos, readRDS)
View(pnadcrds)
dadosestr <- function(pnadcrds){
indices<-list(mg=11,bh=1,entorno=2,colar=3,RIDE=4,sul=5,trng=6,mata=7,norte=8,riodoce=9,central=10)
lapply(indices, function(linha) {
df_result<-do.call(rbind, lapply(pnadcrds[c(1,14,27,40,
2,15,28,41,
3,16,29,42,
4,17,30,43,
5,18,31,44,
6,19,32,45,
7,20,33,46,
8,21,34,47,
9,22,35,48,
10,23,36,49,
11,24,37,50,
12,25,38,51,
13,26,39)], function(df) {
data.frame(
"Período" = as.character(df[linha, 8]),
"Total de ocupados" = as.numeric(df[linha, 2]),
"sd_o" = as.numeric(df[linha, 3]),
"Total de desocupados" = as.numeric(df[linha, 4]),
"sd_d" = as.numeric(df[linha, 5]),
"Taxa de desocupação" = as.numeric(df[linha, 6]),
"sd_txd" = as.numeric(df[linha, 7])
)
}))
df_result <- cbind(
df_result[, 1:3], `CV.ocupados` = with(df_result, `sd_o` / `Total.de.ocupados` * 100),
df_result[, 4:5], `CV.desocupados` = with(df_result, `sd_d` / `Total.de.desocupados` * 100),
df_result[, 6:7], `CV.taxa` = with(df_result, `sd_txd` / `Taxa.de.desocupação` * 100)
)
return(df_result)
})
}
resultados<-dadosestr(pnadcrds)
bh <- resultados$bh
View(bh)
{bh_oc<-ts(bh$Total.de.ocupados[1:51],start=c(2012,1),frequency = 4)
cvbh_o<-ts(bh$CV.ocupados[1:51],start= c(2012,1),frequency=4)
bh_d<-ts(bh$Total.de.desocupados[1:51],start=c(2012,1),frequency = 4)
cvbh_d<-ts(bh$CV.desocupados[1:51],start=c(2012,1),frequency = 4)
bh_txd<-ts(bh$Taxa.de.desocupação[1:51],start=c(2012,1),frequency = 4)
cvbh_txd<-ts(bh$CV.taxa[1:51],start=c(2012,1),frequency = 4)}
txbh<-bh_txd*100 # Para evitar possíveis problemas de escala
modelBuild <- function(param) {
dlm(FF = 1, V = exp(param[1]), GG = 1, W = exp(param[2]), m0 = 1000, C0 = 1000^2)
}
fit <- dlmMLE(txbh, parm = c(0,0), build = modelBuild)
exp(fit$par)
sqrt(exp(fit$par))
model_mle = dlm(FF = 1, V = exp(fit$par[1]), GG = 1, W = exp(fit$par[2]), m0 = 1000, C0 = 1000^2)
bhFilter <- dlmFilter(txbh, model_mle)
plot(txbh, type = 'l', col = "steelblue", lwd = 1.5)
lines(dropFirst(bhFilter$m), type = 'l', col = "orange", lwd = 1.5)
legend("topleft", legend = c("Observado", "Filtrado"), lwd = 1.5, lty = 1,
col = c("steelblue", "orange"))
model_mle = dlm(FF = 1, V = exp(fit$par[1]), GG = 1, W = exp(fit$par[2]), m0 = 1000, C0 = 1000^2)
bhSmooth<- dlmSmooth(txbh,model_mle)
plot(txbh, type = 'l', col = "steelblue", lwd = 1.5)
lines(dropFirst(bhSmooth$s), type = 'l', col = "red", lwd = 1.5)
legend("topleft", legend = c("Observed","Smoothed"), lty = 1, lwd = 1.5, col = c("steelblue", "red"))
dlmtxdbh<- dlmModPoly(order = 2)+dlmModSeas(4)
View(dlmtxdbh)
buildFun <- function(x) {
diag(W(dlmtxdbh))[2:3] <- exp(x[1:2])
V(dlmtxdbh) <- exp(x[3])
return(dlmtxdbh)
}
(fit <- dlmMLE(txbh, parm = rep(0, 3), build = buildFun))$conv
dlmtxdbh <- buildFun(fit$par)
drop(V(dlmtxdbh))
diag(W(dlmtxdbh))[2:3]
txbhSmooth <- dlmSmooth(txbh, mod = dlmtxdbh)
x <- cbind(txbh, dropFirst(txbhSmooth$s[,c(1,3)]))
colnames(x) <- c("Taxa de Desocupação", "Tendência", "Sazonalidade")
plot(x, type = 'o', main = "Taxa de Despocupação de Belo Horizonte")
plot.ts(txbh,col="black", lwd = 2, xlab = "Ano", ylab = "Taxa de Desocupação (%)", main = "01 - Belo Horizonte")
lines(x[,2], col = "red", lwd = 2)
legend("topleft", legend = c("Taxa de Desocupação - BH", "Tendência"), col = c("black", "red"), lwd = 2)
modelo<- list("fn"=function(params){
m = dlmModPoly(2) + dlmModTrig(4) +dlmModReg(se_db,addInt = FALSE)
m$GG[6,6] <- par_ar_erro
W = matrix(0,6,6)
W[1, 1] <- exp(params[1])
W[2, 2] <- exp(params[2])
W[3, 3] <- exp(params[3])
W[6, 6] <- 1
m$W <- W
V =  exp(params[4])
m$V <- V
return(m)
})
modelo$fit <- dlmMLE(txbh, modelo$initial,modelo$fn, hessian=T,control = list(maxit = 10^8))
View(bh)
View(bh)
bh_sdtxd<-ts(bh$sd_txd[1:51],start=c(2012,1),frequency = 4)
# f.modelo_bsm_error_1<-function(y,i0){
modelo<- list("fn"=function(params){
m = dlmModPoly(2) + dlmModTrig(4) +dlmModReg(bh_sdtxd,addInt = FALSE) ## Qual é o erro padrão nomeado como "se_db"?
m$GG[6,6] <- par_ar_erro                                                ## Momentâneamente, substituí pelo erro padrão da taxa de desemprego
W = matrix(0,6,6)
W[1, 1] <- exp(params[1])
W[2, 2] <- exp(params[2])
W[3, 3] <- exp(params[3])
W[6, 6] <- 1
m$W <- W
V =  exp(params[4])
m$V <- V
return(m)
})
modelo$initial<-i0      # Chamada da função que omiti
modelo$fit <- dlmMLE(txbh, modelo$initial,modelo$fn, hessian=T,control = list(maxit = 10^8))
